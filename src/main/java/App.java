import com.sun.media.sound.InvalidDataException;
import org.apache.commons.collections4.trie.PatriciaTrie;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.LineIterator;
import org.apache.commons.lang3.StringUtils;

import java.io.File;
import java.io.IOException;
import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    private static final String WIKI_ARTICLES_FILE_PATH = "C:\\Users\\MehmetEminMumcu\\Desktop\\memn\\hacettepe\\cmp614\\assignment2\\cmp614-assignment2\\src\\main\\resources\\assign2.articles";

    public static void main(String[] args) {

        try {
            App app = new App();
            app.readArticles();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    void readArticles() throws IOException {
        Set<String> vocabulary = new HashSet<>();
        List<PatriciaTrie<Integer>> wordCountsList  = new ArrayList<>();
        try (LineIterator it = FileUtils.lineIterator(new File(WIKI_ARTICLES_FILE_PATH), "UTF-8")) {
            while (it.hasNext()) {
                String[] corpus = StringUtils.split(it.nextLine());

                if (corpus.length < 1) {
                    throw new InvalidDataException("corpus has no words.");
                }

                PatriciaTrie<Integer> wordCounts = countWords(corpus);
                vocabulary.addAll(wordCounts.keySet());
                wordCountsList.add(wordCounts);
            }
        }


    }

    private PatriciaTrie<Integer> countWords(String[] corpus) {
        Arrays.sort(corpus);
        PatriciaTrie<Integer> trie = new PatriciaTrie<>();
        int count = 0;
        String w = corpus[0];
        for (String word : corpus) {
            if (word.equals(w)) {
                count++;
            } else {
                if (count > 50) {
                    trie.put(w, count);
                }
                w = word;
                count = 1;
            }
        }
        return trie;
    }

}
