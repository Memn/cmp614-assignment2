import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Map;
import java.util.Properties;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
class App {


//    private static final int K = 600;
//    private static final float EPSILON = 50f;


    public static void main(String[] args) {

        System.out.println("Welcome to Toefl word matcher.");
        App app = new App();
        Properties prop = new Properties();
        InputStream input;

        try {

            input = new FileInputStream("gradle.properties");

            // load a properties file
            prop.load(input);


            String wiki = prop.getProperty("wiki");
            String toefl = prop.getProperty("toefl");
            System.out.printf("Looking for wiki and toefl file paths... \n");
            System.out.printf("wiki: %s\n", wiki);
            System.out.printf("toefl: %s\n", toefl);

            System.out.printf("Looking for K and EPSILON values... \n");
            int K = Integer.parseInt(prop.getProperty("K"));
            float EPSILON = Float.parseFloat(prop.getProperty("EPSILON"));
            System.out.printf("K: %d\n", K);
            System.out.printf("EPSILON: %.1f\n", EPSILON);

            System.out.println();

            boolean word2Word = Boolean.parseBoolean(prop.getProperty("Word2Word"));
            app.run(wiki, toefl, K, EPSILON, word2Word);

        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }

    private void run(String wiki, String toefl, int k, float epsilon, boolean word2Word) throws IOException {

        Map<String, Integer> vocabulary = VocabularyBuilder.getInstance().build(wiki);

        List<String[]> toeflQuestions = ToeflQuestionAnswerer.getInstance().readToeflQuestions(toefl);

        float[][] reduced;
        int[] answers;

        reduced = ReducedMatrixBuilder.build(wiki, vocabulary, k, epsilon, word2Word);
        answers = ToeflQuestionAnswerer.getInstance().answerToeflQuestions(reduced, toeflQuestions, vocabulary);

        System.out.println("vocabulary size: " + vocabulary.size());
        System.out.println("Questions size: " + toeflQuestions.size());
        System.out.printf("Reduced matrix size: %d X %d\n", reduced.length, reduced[0].length);

        System.out.println();

        printAnswers(toeflQuestions, answers);

    }

    static void printAnswers(List<String[]> toeflQuestions, int[] answers) {
        int correct = 0;
        int wrong = 0;

        System.out.println("#############################");
        String questionTitle = "QUESTION";
        String answer = "ANSWER";
        String guess = "GUESS";
        String correctness = "CORRECTNESS";
        System.out.printf("%-20s%-20s%-20s%-20s\n", questionTitle, answer, guess, correctness);

        for (int i = 0; i < answers.length; i++) {
            String[] question = toeflQuestions.get(i);
            int choice = answers[i];
            if (choice == 1) {
                correct++;
                System.out.printf("%-20s%-20s%-20s%-20s\n", question[0], question[1], question[choice], "TRUE");
            } else {
                System.out.printf("%-20s%-20s%-20s%-20s\n", question[0], question[1], question[choice], "FALSE");
                wrong++;
            }
        }
        System.out.println("#############################");

        System.out.println();

        System.out.println("NOT FOUND IN VOCABULARY: " + ToeflQuestionAnswerer.getGuessed());
        System.out.println("CORRECT COUNT: " + correct);
        System.out.println("WRONG COUNT: " + wrong);
    }


}
